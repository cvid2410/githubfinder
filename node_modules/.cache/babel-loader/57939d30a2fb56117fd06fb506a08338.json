{"ast":null,"code":"var _jsxFileName = \"/Users/carlosvides/Desktop/Udemy/React/github-finder/src/components/users/Users.js\";\nimport React from \"react\";\nimport UserItems from \"./UserItems\";\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from \"prop-types\";\n\nconst Users = ({\n  users,\n  loading\n}) => {\n  if (loading) {\n    return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, users.map(user => React.createElement(UserItems, {\n      key: user.id,\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })));\n  }\n};\n\nUsers.propTypes = {\n  users: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired\n};\nexport default Users;","map":{"version":3,"sources":["/Users/carlosvides/Desktop/Udemy/React/github-finder/src/components/users/Users.js"],"names":["React","UserItems","Spinner","PropTypes","Users","users","loading","map","user","id","propTypes","array","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AACpC,MAAIA,OAAJ,EAAa;AACX,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IACb,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,IAAI,CAACC,EAArB;AAAyB,MAAA,IAAI,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAOD;AACF,CAZD;;AAcAJ,KAAK,CAACM,SAAN,GAAkB;AAChBL,EAAAA,KAAK,EAAEF,SAAS,CAACQ,KAAV,CAAgBC,UADP;AAEhBN,EAAAA,OAAO,EAAEH,SAAS,CAACU,IAAV,CAAeD;AAFR,CAAlB;AAKA,eAAeR,KAAf","sourcesContent":["import React from \"react\";\nimport UserItems from \"./UserItems\";\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from \"prop-types\";\n\nconst Users = ({ users, loading }) => {\n  if (loading) {\n    return <Spinner />;\n  } else {\n    return (\n      <div>\n        {users.map(user => (\n          <UserItems key={user.id} user={user} />\n        ))}\n      </div>\n    );\n  }\n};\n\nUsers.propTypes = {\n  users: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}